<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <title>VectoriaDB</title>
    <!-- Einbinden der Semantic UI CSS -->
    <link rel="stylesheet" type="text/css" href="/static/semantic.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.61.1/codemirror.min.css" />
</head>

<style>
    .CodeMirror {
        flex: 1;
        vertical-overflow: auto;
        border: 1px solid #eee;
        border-radius: 5px;
    }
    .CodeMirror-linenumbers {
        padding: 0 4px; /* Abstand für Zeilennummern */
    }
    .CodeMirror-lines {
        padding-left: 10px; /* Abstand für den Textbereich */
    }
    .centered-statistic {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .field {
        display: flex;
        align-items: center;
    }
</style>
<body>

<!-- Navigationsmenü -->
<div class="ui inverted menu">
    <a class="active item" data-tab="dashboard">Dashboard</a>
    <a class="item" data-tab="collections">Collections</a>
    <a class="item" data-tab="visualization">Visualization</a>
    <a class="item" data-tab="analytics">Analytics</a>
    <a class="item" data-tab="workbench">Workbench</a>
</div>

<!-- Hauptinhalt -->
<div class="ui active tab segment" data-tab="dashboard">
    <h2 class="ui header">Dashboard</h2>
    <p>Your VectoriaDB Server.</p>
    <div class="ui segments">
        <div class="ui segment centered-statistic">
            <div class="ui statistic">
                <div class="value">
                    {{.Application.CollectionCount}}
                </div>
                <div class="label">
                    Collections in Database
                </div>
            </div>
        </div>
        <div class="ui segment centered-statistic">
            <div class="ui statistic">
                <div class="value">
                    {{.Application.RamUsage}}
                </div>
                <div class="label">
                    RAM Usage in MB
                </div>
            </div>
        </div>
    </div>
</div>
<div class="ui tab segment" data-tab="collections">
    <h2 class="ui header">Collections</h2>
    <p>Manage your Collections.</p>
    <!-- Collections Tabelle -->
    <div class="ui styled fluid accordion">
        {{range .Collections}}
            <div class="title">
                <i class="dropdown icon"></i>
                {{.Name}}
            </div>
            <div class="content">
                <p>Nodecount: {{.NodeCount}}</p>
                <p>DistanceFunction: {{.DistanceFunc}}</p>
                <p>DiagonalLength: {{.DiagonalLength}}</p>
                {{if .ClassifierReady}}
                    <p>Classifier: <span style="color:green;">&#10004;</span> Ready to create Classifier</p>
                {{else}}
                    <p>Collection Classifier Readiness: <span style="color:red;">&#10008;</span> Not Ready to create Classifier</p>
                {{end}}
                {{range .Classifier}}
                    <p>Classifier: {{.}}</p>
                {{end}}
                <div class="ui form">
                    <div class="fields">
                        <div class="field">
                            <input type="text" id="classifierName" placeholder="Name">
                        </div>
                        <div class="field">
                            <input type="text" id="classifierDegree" placeholder="Degree">
                        </div>
                        <div class="field">
                            <input type="text" id="classifierCValue" placeholder="CValue">
                        </div>
                        <div class="field">
                            <input type="text" id="classifierEpochs" placeholder="Epochs">
                        </div>
                        <div class="field">
                            <button class="ui button" id="createClassifierButton" data-collection-id="{{.Name}}" {{if not .ClassifierReady}}disabled{{end}}>Create Classifier</button>
                        </div>
                    </div>
                </div>
                <button class="ui red button" data-collection-id="{{.Name}}">Delete</button>
            </div>
        {{end}}
    </div>
</div>
<div class="ui tab segment" data-tab="visualization">
    <h2 class="ui header">Visualization</h2>
    <p>Visualize your Data.</p>
</div>
<div class="ui tab segment" data-tab="analytics">
    <h2 class="ui header">Analytics</h2>
    <p>Analytics about your Server / Collections.</p>
</div>
<div class="ui tab segment" data-tab="workbench">
    <h2 class="ui header">Workbench</h2>
    <p>Communicate with VectoriaDB via JSON.</p>
    <button class="ui green button" id="sendButton" style="position: absolute; top: 10px; right: 10px;">Send</button>
    <div class="ui selection dropdown" id="dropdownMenu" style="position: absolute; top: 50px; right: 10px;">
        <input type="hidden" name="action">
        <i class="dropdown icon"></i>
        <div class="default text">Select Action</div>
        <div class="menu">
            <div class="item" data-value="delete">/delete</div>
            <div class="item" data-value="createcollection">/createcollection</div>
            <div class="item" data-value="search">/search</div>
            <div class="item" data-value="addpoint">/addpoint</div>
            <div class="item" data-value="listcollections">/listcollections</div>
            <div class="item" data-value="deletepoint">/deletepoint</div>
        </div>
    </div>
    <div class="editor-container">
        <h3>Input</h3>
        <div id="editor1"></div>
        <h3>Output</h3>
        <div id="editor2"></div>
    </div>
</div>

<!-- Einbinden von jQuery und Semantic UI JavaScript -->
<script src="/static/jquery.js"></script>
<script src="/static/semantic.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.61.1/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.61.1/mode/javascript/javascript.min.js"></script>

<script>
  $(document).ready(function() {
      // Initialisierung der Tabs und Akkordeons
      $('.ui.accordion').accordion();

      // Event-Handler für Klick auf Menüpunkt
      $('[data-tab]').on('click', function() {
          var tabPath = $(this).attr('data-tab');
          localStorage.setItem('activeTab', tabPath);
      });

      var activeTab = localStorage.getItem('activeTab');
      if (activeTab) {
          $('[data-tab]').tab('change tab', activeTab);
      }

      var editor1 = CodeMirror(document.getElementById('editor1'), {
          lineNumbers: true,
          autoRefresh: true,
          mode: 'javascript'
      });
      editor1.refresh();

      var editor2 = CodeMirror(document.getElementById('editor2'), {
          lineNumbers: true,
          autoRefresh: true,
          mode: 'javascript',
          readOnly: true
      });
      editor1.refresh();

      $('#createClassifierButton').on('click', function() {
          // Werte aus den Eingabefeldern abrufen
          var classifierName = $('#classifierName').val();
          var classifierDegree = parseInt($('#classifierDegree').val(), 10);
          var classifierCValue = parseFloat($('#classifierCValue').val());
          var classifierEpochs = parseInt($('#classifierEpochs').val(), 10);
          var collectionName = $(this).data('collection-id');

          // JSON-Objekt erstellen
          var data = {
              "collection_name": collectionName,
              "classifier_name": classifierName,
              "degree": classifierDegree,
              "c": classifierCValue,
              "epochs": classifierEpochs
          };

          // JSON-Objekt an den Server senden
          $.ajax({
              type: "PUT",
              url: "/trainclassifier",
              data: JSON.stringify(data),
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              success: function(response){
                  // Hier können Sie Code hinzufügen, der ausgeführt wird, wenn die Anfrage erfolgreich war
                  console.log(response);
              },
              error: function(error){
                  // Hier können Sie Code hinzufügen, der ausgeführt wird, wenn ein Fehler aufgetreten ist
                  console.log(error);
              }
          });
      });

      // Initialisierung der Tabs und Akkordeons
      $('.menu .item').tab();
      $('.ui.accordion').accordion();

      // Event-Handler für den Löschen-Button
      $('.ui.accordion').on('click', '.ui.red.button', function() {
          var collectionId = $(this).data('collection-id');
          // Logik zum Löschen der Collection, z.B. AJAX-Request
          console.log('Löschen der Collection mit ID: ' + collectionId);
          // send the json {collection: collectionId} to the servers /delete endpoint to delete the collection
            $.ajax({
                type: "POST",
                url: "/delete",
                data: JSON.stringify({name: collectionId}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(data){
                    location.reload();
                },
                error: function(data){
                    console.log(data);
                }

            });
      });

      // Event-Handler für den Senden-Button
      $('#sendButton').on('click', function() {
          // Logik zum Senden der Daten, z.B. AJAX-Request
          console.log('Senden der Daten');
      });
      // activate dropdown
      $('#dropdownMenu').dropdown();

      $('#sendButton').on('click', function() {
          // Holen Sie sich die ausgewählte Aktion aus dem Dropdown-Menü
          var selectedAction = $('#dropdownMenu').dropdown('get value');

          // Überprüfen Sie, ob eine Aktion ausgewählt wurde
          if (!selectedAction) {
              alert('Bitte wählen Sie eine Aktion aus dem Dropdown-Menü aus.');
              return;
          }

          // Holen Sie sich den Inhalt von editor1
          var editorContent = editor1.getValue();

          // Überprüfen Sie, ob der Inhalt von editor1 gültiges JSON ist
          try {
              var jsonData = JSON.parse(editorContent);
          } catch (error) {
              alert('Der Inhalt von editor1 ist kein gültiges JSON.');
              return;
          }

          // Bestimmen Sie die Methode basierend auf der ausgewählten Aktion
          var method;
          switch (selectedAction) {
              case 'createcollection':
                  method = 'POST';
                  break;
              case 'addpoint':
              case 'addpointbatch':
                  method = 'PUT';
                  break;
              case 'delete':
              case 'deletepoint':
                  method = 'DELETE';
                  break;
              case 'search':
              case 'list':
                  method = 'GET';
                  break;
              default:
                  alert('Unbekannte Aktion: ' + selectedAction);
                  return;
          }

          // Senden Sie den Inhalt von editor1 als JSON an den Server
          $.ajax({
              type: method,
              url: "/" + selectedAction,
              data: JSON.stringify(jsonData),
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              success: function(response){
                  // Setzen Sie die Antwort des Servers in editor2
                  editor2.setValue(JSON.stringify(response, null, 2));
              },
              error: function(error){
                  // Setzen Sie die Fehlermeldung in editor2
                  editor2.setValue(JSON.stringify(error, null, 2));
              }
          });

      });
  });


</script>

</body>
</html>
